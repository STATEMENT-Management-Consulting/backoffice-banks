@keyframes show-favorites {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.ShowFavorites {
  animation: show-favorites 1s;
}

.RootLayoutRouteSubMenu {
  color: theme("colors.gray.shade7");
}

.RootLayoutRouteSubMenu:not([route-disable="true"]):hover span {
  margin-left: 1rem;
  color: theme("colors.blue.shade1");
}

.RootLayoutRoute {
  position: relative;
  z-index: 2;
  transition: all 0 ease 400ms;
  display: flex;
  align-items: center;
  column-gap: 0.63rem;
  padding: 0.94rem 1rem;
  border-radius: 0.625rem;
  font-weight: 700;
  font-size: 0.875rem;
  color: theme("colors.gray.shade7");
}

.RootLayoutRoute:hover:not([route-disable="true"]),
.RootLayoutRoute[route-current="true"] {
  color: theme("colors.primary");
  background-color: rgba(11, 137, 206, 0.1);
}

.RootLayoutRoute:hover:not([route-disable="true"]) > svg > *,
.RootLayoutRoute[route-current="true"] > svg > *,
.RootLayoutRouteLinkHover:hover > svg > *,
.RootLayoutRouteLinkHover[route-current="true"] > svg > * {
  fill: theme("colors.primary");
}

.RootLayoutRoute:hover:not([route-disable="true"]) > svg[fill="none"] > *,
.RootLayoutRoute[route-current="true"] > svg[fill="none"] > *,
.RootLayoutRouteLinkHover:hover > svg[fill="none"] > *,
.RootLayoutRouteLinkHover[route-current="true"] > svg[fill="none"] > * {
  fill: theme("colors.primary");
  stroke: transparent !important;
}

.RootLayoutRoute[route-disable="true"] {
  cursor: not-allowed !important;
}
